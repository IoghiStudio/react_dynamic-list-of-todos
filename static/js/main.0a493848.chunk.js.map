{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todoList","currentTodo","setCurrentTodo","className","map","todo","id","title","completed","cn","type","onClick","TodoFilter","query","setQuery","setFilterBy","onChange","event","target","value","placeholder","length","style","pointerEvents","Loader","TodoModal","user","onRemove","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterBy","App","useState","undefined","setTodoList","setUser","filterBy","useEffect","data","userId","filteredTodos","filter","Active","Completed","visibleTodos","toLowerCase","includes","removeSelectedTodo","useCallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a493848.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todoList: Todo[] | undefined;\n  currentTodo: Todo;\n  setCurrentTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todoList,\n  currentTodo,\n  setCurrentTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todoList?.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        return (\n          <tr key={id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{id}</td>\n            {completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setCurrentTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn(\n                      'far',\n                      {\n                        'fa-eye': currentTodo !== todo,\n                        'fa-eye-slash': currentTodo === todo,\n                      },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string;\n  setQuery: (input: string) => void;\n  setFilterBy: (input: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setFilterBy,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setFilterBy(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => {\n          setQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      ) }\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  user: User | null;\n  currentTodo: Todo;\n  onRemove: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user,\n  currentTodo,\n  onRemove,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onRemove}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={cn({\n                  'has-text-danger': !currentTodo.completed,\n                  'has-text-success': currentTodo.completed,\n                })}\n              >\n                {currentTodo.completed\n                  ? (\n                    'Done'\n                  ) : (\n                    'Planned'\n                  )}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { User } from './types/User';\n\nenum FilterBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState<Todo[] | undefined>(undefined);\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState('all');\n\n  useEffect(() => {\n    getTodos()\n      .then(data => setTodoList(data));\n  }, []);\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo?.userId)\n        .then(data => setUser(data));\n    } else {\n      setUser(null);\n    }\n  }, [currentTodo]);\n\n  const filteredTodos = todoList?.filter(todo => {\n    switch (filterBy) {\n      case FilterBy.Active:\n        return todo.completed === false;\n\n      case FilterBy.Completed:\n        return todo.completed === true;\n\n      default:\n        return todo;\n    }\n  });\n\n  const visibleTodos = filteredTodos?.filter(todo => {\n    return todo.title.toLowerCase().includes(query.toLowerCase());\n  });\n\n  const removeSelectedTodo = useCallback(\n    () => setCurrentTodo(null),\n    [],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilterBy={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todoList\n                ? (\n                  <TodoList\n                    todoList={visibleTodos}\n                    currentTodo={currentTodo}\n                    setCurrentTodo={setCurrentTodo}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal\n          user={user}\n          currentTodo={currentTodo}\n          onRemove={removeSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}